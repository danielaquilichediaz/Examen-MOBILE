<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>Examen-MOBILE</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

</project>
<dependencies>
<dependency>
    <groupId>io.appium</groupId>
    <artifactId>java-client</artifactId>
    <version>8.5.1</version>
</dependency>
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>7.8.0</version>
</dependency>
<dependency>
    <groupId>com.aventstack</groupId>
    <artifactId>extentreports</artifactId>
    <version>5.0.9</version>
</dependency>
</dependencies>

        importar org.testng.Assert;
        importar org.testng.annotations.Test;

        La clase pública ShoppingCartTests extiende BaseTest {

        @Prueba("prioridad = 1")
        Validar vacío públicoProductGalleryLoads() {
        // Validar que los productos estén visibles
        Assert.assertTrue(driver.findElementById("product_gallery_id").isDisplayed(),
        "La galería de productos no se cargó correctamente.");
        }

        @Test(prioridad = 2, proveedor de datos = "datos del producto")
        public void addProductToCart(String productName, int cantidad) {
        // Seleccionar producto y añadir al carrito
        driver.findElementByAccessibilityId(nombredelproducto).click();
        driver.findElementById("add_to_cart_button_id").click();

        // Validar que el carrito actualiza la cantidad
        Cadena cartQuantity = driver.findElementById("cart_quantity_id").getText();
        Assert.assertEquals(cartQuantity, String.valueOf(cantidad),
        "La cantidad en el carrito no coincide.");
        }

        @DataProvider(nombre = "datosdelproducto")
        Objeto público[][] getProductData() {
        devolver nuevo objeto[][]{
        {"Mochila de Sauce Labs", 1},
        {"Perno de Sauce Labs - Camiseta", 1},
        {"Luz para bicicleta Sauce Labs", 2}
        };
        }
        }